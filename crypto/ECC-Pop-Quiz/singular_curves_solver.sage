p = 64518969972801749135824756448131493706734389469270250066663086832435514842479
F = GF(p)
gx = F(31986780550433799412677941858823423462114675892648377547683577577089459947957)
gy = F(11509231773975864622155000847426450160467982025545638320872552222838673248549)
px = F(52347810026255191041494102208234452298246597815932773934750056493671410990362)
py = F(63777206219972690354649649026733602083638434210540402295106809436445953625387)

a = ((gy^2 - py^2)-(gx^3 - px^3))/(gx - px)
b = gy^2 - (gx^3 + a*gx)
#a,b = -3,2
print(a,b)

D = 4*(a^3) + 27*(b^2)
print(D==0)

P.<x> = F[]
f = x^3 + a*x + b
f_factors = f.factor()
r = F(f_factors[1][0] - x)
f_ = f.subs(x=x-r)
ff = f_.factor()

t = F(ff[0][0]-x).square_root()
u = ((gy + t*(gx+r))/(gy - t*(gx+r)))
v = ((py + t*(px+r))/(py - t*(px+r)))
print(u,v)

n = discrete_log(v, u)
print(n)
