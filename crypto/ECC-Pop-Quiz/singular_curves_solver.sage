p = 58134942645515822192505360465795678557232116499536154833549287264270554928567
F = GF(p)
gx = F(16155162545966783783096725195397183191255472641132807103844501672323817973395)
gy = F(57566855590399363305470893968088020810046968996828043214030849682716451075572)
px = F(51024265810967330045410980041168776684493702142927569659711828520421316198177)
py = F(35781125515091611870762799948743647841760874562292322984548094124739965788898)
n_given = 71028613

a = ((gy^2 - py^2)-(gx^3 - px^3))/(gx - px)
b = gy^2 - (gx^3 + a*gx)
#a,b = -3,2
print(a,b)

D = 4*(a^3) + 27*(b^2)
print(D==0)

P.<x> = F[]
f = x^3 + a*x + b
f_factors = f.factor()
r = F(f_factors[1][0] - x)
f_ = f.subs(x=x-r)
ff = f_.factor()

t = F(ff[0][0]-x).square_root()
u = ((gy + t*(gx+r))/(gy - t*(gx+r)))
v = ((py + t*(px+r))/(py - t*(px+r)))
print(u,v)

n = discrete_log(v, u)
print(n==n_given)
